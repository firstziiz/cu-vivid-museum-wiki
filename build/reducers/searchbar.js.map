{"version":3,"sources":["../../src/reducers/searchbar.js"],"names":["SearchbarActions","state","action","nextState","selectedCategoryIndexes","searchInputValue","Object","assign","type","SELECTED_CATEGORY_AT_INDEX","payload"],"mappings":";;;;;;AACA;;IAAYA,gB;;;;kBAMG,UAACC,KAAD,EAAwBC,MAAxB,EAAwC;AACnD,QAAIC,kBAAJ;AACA,QAAI,CAACF,KAAL,EAAY;AACRE,oBAAY;AACRC,qCAAyB,EADjB;AAERC,8BAAkB;AAFV,SAAZ;AAIH,KALD,MAKO;AACHF,oBAAYG,OAAOC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAZ;AACH;;AAED,YAAQC,OAAOM,IAAf;AACI,aAAKR,iBAAiBS,0BAAtB;AACIN,sBAAUC,uBAAV,GAAoCF,OAAOQ,OAA3C;AACA;AACJ;AACI;AALR;;AAQA,WAAOP,SAAP;AACH,C","file":"searchbar.js","sourcesContent":["// @flow\nimport * as SearchbarActions from './../actions/searchbar';\n\ntype SearchbarState = {\n    selectedCategoryIndexes: number[];\n    searchInputValue: string;\n}\nexport default (state: SearchbarState, action: any) => {\n    let nextState;\n    if (!state) {\n        nextState = {\n            selectedCategoryIndexes: [],\n            searchInputValue: '',\n        };\n    } else {\n        nextState = Object.assign({}, state);\n    }\n\n    switch (action.type) {\n        case SearchbarActions.SELECTED_CATEGORY_AT_INDEX:\n            nextState.selectedCategoryIndexes = action.payload;\n            break;\n        default:\n            break;\n    }\n\n    return nextState;\n};\n"]}