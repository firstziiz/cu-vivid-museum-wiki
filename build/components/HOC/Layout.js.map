{"version":3,"sources":["../../../src/components/HOC/Layout.js"],"names":["connectLayout","client","Component","title","Layout","req","isServer","props","store","initialState"],"mappings":";;;;;;;;;;;;;;;;;;;;;;kBAwBwBA,a;;AAvBxB;;;;AACA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMC,SAAS,2BAAiB;AAC5B;AAD4B,CAAjB,CAAf;;AAIA;;AAOe,SAASD,aAAT,CAAuBE,SAAvB,EAAoE;AAAA,QAAlCC,KAAkC,uEAA1B,wBAA0B;;AAAA,QACzEC,MADyE;AAAA;AAAA;AAAA;AAAA,kDAE3C;AAAA,oBAAPC,GAAO,QAAPA,GAAO;;AAC5B,oBAAMC,WAAW,CAAC,CAACD,GAAnB;AACA,uBAAO;AACHC;AADG,iBAAP;AAGH;AAP0E;;AAQ3E,wBAAYC,KAAZ,EAA8B;AAAA;;AAAA,sIACpBA,KADoB;;AAE1B,kBAAKC,KAAL,GAAa,2BAAeD,MAAME,YAArB,EAAmCR,MAAnC,EAA2CM,MAAMD,QAAjD,CAAb;AAF0B;AAG7B;;AAX0E;AAAA;AAAA,qCAelE;AACL,uBACI;AAAA;AAAA,sBAAK,IAAG,WAAR;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAQH;AAAR,yBADJ;AAEI,gEAAM,SAAQ,OAAd,GAFJ;AAGI,gEAAM,MAAK,UAAX,EAAsB,SAAQ,uCAA9B,GAHJ;AAII,gEAAM,MAAK,uCAAX,EAAmD,KAAI,YAAvD,GAJJ;AAKI,gEAAM,MAAK,0CAAX,EAAsD,KAAI,YAA1D,GALJ;AAMI,gEAAM,MAAK,0CAAX,EAAsD,KAAI,YAA1D,GANJ;AAOI,gEAAM,MAAK,yCAAX,EAAqD,KAAI,YAAzD,GAPJ;AAQI,gEAAM,MAAK,oDAAX,EAAgE,KAAI,YAApE,GARJ;AASI;AAAA;AAAA,8BAAO,YAAP;AAAA;AAAA;AATJ,qBADJ;AAyBI;AAAA;AAAA,0BAAK,WAAU,WAAf;AACI,6EADJ;AAEI;AAAA;AAAA,8BAAK,WAAU,SAAf;AACI;AAAA;AAAA,kCAAgB,OAAO,KAAKK,KAA5B,EAAmC,QAAQP,MAA3C;AACI,8DAAC,SAAD,EAAe,KAAKM,KAApB;AADJ;AADJ,yBAFJ;AAOI,6EAPJ;AAQI;AAAA;AAAA,8BAAO,SAAP;AAAA;AAAA;AARJ;AAzBJ,iBADJ;AAmDH;AAnE0E;AAAA;AAAA,MAC1D,gBAAML,SADoD;;AAsE/E,WAAOE,MAAP;AACH","file":"Layout.js","sourcesContent":["// @flow\nimport React from 'react';\nimport Head from 'next/head';\nimport { Provider } from 'react-redux';\nimport ApolloClient, { createNetworkInterface } from 'apollo-client';\nimport { ApolloProvider } from 'react-apollo';\n\nimport path from 'path';\nimport Header from '../common/Header';\nimport Footer from '../common/Footer';\n\nimport configureStore from '../../store/configStore';\n\nconst client = new ApolloClient({\n    // networkInterface: createNetworkInterface(),\n});\n\n// export default ({ req, children, title = 'This is the default title' }) =>\ntype PropsType = {\n    initialState(): any;\n    isServer: boolean;\n    title: string;\n    children: any[];\n}\nexport default function connectLayout(Component, title = 'พิพิธภัณฑ์ เภสัชศาสตร์') {\n    class Layout extends React.Component {\n        static getInitialProps({ req }) {\n            const isServer = !!req;\n            return {\n                isServer,\n            };\n        }\n        constructor(props: PropsType) {\n            super(props);\n            this.store = configureStore(props.initialState, client, props.isServer);\n        }\n        props: PropsType\n        store: any;\n\n        render() {\n            return (\n                <div id=\"Vivid-app\">\n                    <Head>\n                        <title>{title}</title>\n                        <meta charSet=\"utf-8\" />\n                        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n                        <link href=\"/static/fonts/circular/stylesheet.css\" rel=\"stylesheet\" />\n                        <link href=\"/static/fonts/chula-narak/stylesheet.css\" rel=\"stylesheet\" />\n                        <link href=\"/static/fonts/supermarket/stylesheet.css\" rel=\"stylesheet\" />\n                        <link href=\"/static/fonts/superspace/stylesheet.css\" rel=\"stylesheet\" />\n                        <link href=\"/static/fonts/fontawesome/css/font-awesome.min.css\" rel=\"stylesheet\" />\n                        <style global>\n                            {\n                                `\n                        * {\n                            -webkit-font-smoothing: antialiased;\n                        }\n                        body {\n                            margin: 0;\n                            padding: 0;\n                            font-family: Thonburi, Tahoma, Helvetica Neue,Helvetica,Arial,sans-serif;\n                        }\n                        `\n                            }\n                        </style>\n                    </Head>\n                    <div className=\"container\">\n                        <Header />\n                        <div className=\"content\">\n                            <ApolloProvider store={this.store} client={client}>\n                                <Component {...this.props} />\n                            </ApolloProvider>\n                        </div>\n                        <Footer />\n                        <style jsx>\n                            {\n                                `\n                        .container {\n                            display: flex;\n                            min-height: 100vh;\n                            flex-direction: column;\n                        }\n                        .content {\n                            flex: 2 0 auto;\n                        }\n                        `\n                            }\n                        </style>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    return Layout;\n}\n\n"]}