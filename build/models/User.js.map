{"version":3,"sources":["../../src/models/User.js"],"names":["keystone","require","Types","Field","User","List","add","name","type","Name","required","index","email","Email","initial","password","Password","isAdmin","Boolean","label","schema","virtual","get","relationship","ref","path","refPath","defaultColumns","register"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,QAAQF,SAASG,KAAT,CAAeD,KAA3B;;AAEA;;;;AAIA,IAAIE,OAAO,IAAIJ,SAASK,IAAb,CAAkB,MAAlB,CAAX;;AAEAD,KAAKE,GAAL,CAAS;AACRC,QAAM,EAAEC,MAAMN,MAAMO,IAAd,EAAoBC,UAAU,IAA9B,EAAoCC,OAAO,IAA3C,EADE;AAERC,SAAO,EAAEJ,MAAMN,MAAMW,KAAd,EAAqBC,SAAS,IAA9B,EAAoCJ,UAAU,IAA9C,EAAoDC,OAAO,IAA3D,EAFC;AAGRI,YAAU,EAAEP,MAAMN,MAAMc,QAAd,EAAwBF,SAAS,IAAjC,EAAuCJ,UAAU,IAAjD;AAHF,CAAT,EAIG,aAJH,EAIkB;AACjBO,WAAS,EAAET,MAAMU,OAAR,EAAiBC,OAAO,qBAAxB,EAA+CR,OAAO,IAAtD;AADQ,CAJlB;;AAQA;AACAP,KAAKgB,MAAL,CAAYC,OAAZ,CAAoB,mBAApB,EAAyCC,GAAzC,CAA6C,YAAY;AACxD,SAAO,KAAKL,OAAZ;AACA,CAFD;;AAKA;;;AAGAb,KAAKmB,YAAL,CAAkB,EAAEC,KAAK,MAAP,EAAeC,MAAM,OAArB,EAA8BC,SAAS,QAAvC,EAAlB;;AAGA;;;AAGAtB,KAAKuB,cAAL,GAAsB,sBAAtB;AACAvB,KAAKwB,QAAL","file":"User.js","sourcesContent":["var keystone = require('keystone');\nvar Types = keystone.Field.Types;\n\n/**\n * User Model\n * ==========\n */\nvar User = new keystone.List('User');\n\nUser.add({\n\tname: { type: Types.Name, required: true, index: true },\n\temail: { type: Types.Email, initial: true, required: true, index: true },\n\tpassword: { type: Types.Password, initial: true, required: true },\n}, 'Permissions', {\n\tisAdmin: { type: Boolean, label: 'Can access Keystone', index: true },\n});\n\n// Provide access to Keystone\nUser.schema.virtual('canAccessKeystone').get(function () {\n\treturn this.isAdmin;\n});\n\n\n/**\n * Relationships\n */\nUser.relationship({ ref: 'Post', path: 'posts', refPath: 'author' });\n\n\n/**\n * Registration\n */\nUser.defaultColumns = 'name, email, isAdmin';\nUser.register();\n"]}