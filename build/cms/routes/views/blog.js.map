{"version":3,"sources":["../../../../src/cms/routes/views/blog.js"],"names":["keystone","require","async","exports","module","req","res","view","View","locals","section","filters","category","params","data","posts","categories","on","next","list","model","find","sort","exec","err","results","length","each","count","where","in","id","postCount","findOne","key","result","q","paginate","page","query","perPage","maxPages","state","populate","render"],"mappings":"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","file":"blog.js","sourcesContent":["var keystone = require('keystone');\nvar async = require('async');\n\nexports = module.exports = function (req, res) {\n\n\tvar view = new keystone.View(req, res);\n\tvar locals = res.locals;\n\n\t// Init locals\n\tlocals.section = 'blog';\n\tlocals.filters = {\n\t\tcategory: req.params.category,\n\t};\n\tlocals.data = {\n\t\tposts: [],\n\t\tcategories: [],\n\t};\n\n\t// Load all categories\n\tview.on('init', function (next) {\n\n\t\tkeystone.list('PostCategory').model.find().sort('name').exec(function (err, results) {\n\n\t\t\tif (err || !results.length) {\n\t\t\t\treturn next(err);\n\t\t\t}\n\n\t\t\tlocals.data.categories = results;\n\n\t\t\t// Load the counts for each category\n\t\t\tasync.each(locals.data.categories, function (category, next) {\n\n\t\t\t\tkeystone.list('Post').model.count().where('categories').in([category.id]).exec(function (err, count) {\n\t\t\t\t\tcategory.postCount = count;\n\t\t\t\t\tnext(err);\n\t\t\t\t});\n\n\t\t\t}, function (err) {\n\t\t\t\tnext(err);\n\t\t\t});\n\t\t});\n\t});\n\n\t// Load the current category filter\n\tview.on('init', function (next) {\n\n\t\tif (req.params.category) {\n\t\t\tkeystone.list('PostCategory').model.findOne({ key: locals.filters.category }).exec(function (err, result) {\n\t\t\t\tlocals.data.category = result;\n\t\t\t\tnext(err);\n\t\t\t});\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t});\n\n\t// Load the posts\n\tview.on('init', function (next) {\n\n\t\tvar q = keystone.list('Post').paginate({\n\t\t\tpage: req.query.page || 1,\n\t\t\tperPage: 10,\n\t\t\tmaxPages: 10,\n\t\t\tfilters: {\n\t\t\t\tstate: 'published',\n\t\t\t},\n\t\t})\n\t\t\t.sort('-publishedDate')\n\t\t\t.populate('author categories');\n\n\t\tif (locals.data.category) {\n\t\t\tq.where('categories').in([locals.data.category]);\n\t\t}\n\n\t\tq.exec(function (err, results) {\n\t\t\tlocals.data.posts = results;\n\t\t\tnext(err);\n\t\t});\n\t});\n\n\t// Render the view\n\tview.render('blog');\n};\n"]}