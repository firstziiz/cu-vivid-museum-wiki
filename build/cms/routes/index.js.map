{"version":3,"sources":["../../../src/cms/routes/index.js"],"names":["keystone","require","middleware","importRoutes","importer","__dirname","pre","initLocals","flashMessages","routes","views","exports","module","app"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,aAAaD,QAAQ,cAAR,CAAjB;AACA,IAAIE,eAAeH,SAASI,QAAT,CAAkBC,SAAlB,CAAnB;;AAEA;AACAL,SAASM,GAAT,CAAa,QAAb,EAAuBJ,WAAWK,UAAlC;AACAP,SAASM,GAAT,CAAa,QAAb,EAAuBJ,WAAWM,aAAlC;;AAEA;AACA,IAAIC,SAAS;AACZC,SAAOP,aAAa,SAAb;AADK,CAAb;;AAIA;AACAQ,UAAUC,OAAOD,OAAP,GAAiB,UAAUE,GAAV,EAAe;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,CAVD","file":"index.js","sourcesContent":["/**\n * This file is where you define your application routes and controllers.\n *\n * Start by including the middleware you want to run for every request;\n * you can attach middleware to the pre('routes') and pre('render') events.\n *\n * For simplicity, the default setup for route controllers is for each to be\n * in its own file, and we import all the files in the /routes/views directory.\n *\n * Each of these files is a route controller, and is responsible for all the\n * processing that needs to happen for the route (e.g. loading data, handling\n * form submissions, rendering the view template, etc).\n *\n * Bind each route pattern your application should respond to in the function\n * that is exported from this module, following the examples below.\n *\n * See the Express application routing documentation for more information:\n * http://expressjs.com/api.html#app.VERB\n */\n\nvar keystone = require('keystone');\nvar middleware = require('./middleware');\nvar importRoutes = keystone.importer(__dirname);\n\n// Common Middleware\nkeystone.pre('routes', middleware.initLocals);\nkeystone.pre('render', middleware.flashMessages);\n\n// Import Route Controllers\nvar routes = {\n\tviews: importRoutes('./views'),\n};\n\n// Setup Route Bindings\nexports = module.exports = function (app) {\n\t// Views\n\t// app.get('/', routes.views.index);\n\t// app.get('/blog/:category?', routes.views.blog);\n\t// app.get('/blog/post/:post', routes.views.post);\n\t// app.get('/gallery', routes.views.gallery);\n\n\t// NOTE: To protect a route so that only admins can see it, use the requireUser middleware:\n\t// app.get('/protected', middleware.requireUser, routes.views.protected);\n\n};\n"]}